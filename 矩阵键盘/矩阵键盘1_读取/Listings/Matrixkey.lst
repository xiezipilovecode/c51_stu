C51 COMPILER V9.60.7.0   MATRIXKEY                                                         06/26/2024 23:54:14 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MATRIXKEY
OBJECT MODULE PLACED IN .\Objects\Matrixkey.obj
COMPILER INVOKED BY: D:\study\embedded\program\c51\C51\BIN\C51.EXE Matrixkey.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTE
                    -ND PRINT(.\Listings\Matrixkey.lst) OBJECT(.\Objects\Matrixkey.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Delay.h"
   3          #define KEY_MATRIX_PORT P1
   4          
   5          /*******************************************************************************
   6          * 函 数 名       : matrix_key_scan
   7          * 函数功能           : 使用行列式扫描方法，检测矩阵按键是否按下，按下则返回对应键
             -值
   8          * 输    入       : 无
   9          * 输    出             : key_value：1-16，对应S1-S16键，
  10                                             0：按键未按下
  11          *******************************************************************************/
  12          unsigned char matrix_key_scan(void)
  13          {
  14   1              unsigned char key_value=0;
  15   1      
  16   1              KEY_MATRIX_PORT=0xf7;//给第一列赋值0，其余全为1
  17   1              if(KEY_MATRIX_PORT!=0xf7)//判断第一列按键是否按下
  18   1              {
  19   2                      Delay(10);//消抖，延迟十毫秒
  20   2                      // 接下来判断
  21   2                      switch(KEY_MATRIX_PORT)//保存第一列按键按下后的键值        
  22   2                      {
  23   3                              case 0x77: key_value=1;break;
  24   3                              case 0xb7: key_value=5;break;
  25   3                              case 0xd7: key_value=9;break;
  26   3                              case 0xe7: key_value=13;break;
  27   3                      }
  28   2              }
  29   1              while(KEY_MATRIX_PORT!=0xf7);//等待按键松开       
  30   1              
  31   1              KEY_MATRIX_PORT=0xfb;//给第二列赋值0，其余全为1
  32   1              if(KEY_MATRIX_PORT!=0xfb)//判断第二列按键是否按下
  33   1              {
  34   2                      Delay(10);//消抖，延迟十毫秒
  35   2                      switch(KEY_MATRIX_PORT)//保存第二列按键按下后的键值        
  36   2                      {
  37   3                              case 0x7b: key_value=2;break;
  38   3                              case 0xbb: key_value=6;break;
  39   3                              case 0xdb: key_value=10;break;
  40   3                              case 0xeb: key_value=14;break;
  41   3                      }
  42   2              }
  43   1              while(KEY_MATRIX_PORT!=0xfb);//等待按键松开       
  44   1              
  45   1              KEY_MATRIX_PORT=0xfd;//给第三列赋值0，其余全为1
  46   1              if(KEY_MATRIX_PORT!=0xfd)//判断第三列按键是否按下
  47   1              {
  48   2                      Delay(10);//消抖，延迟十毫秒
  49   2                      switch(KEY_MATRIX_PORT)//保存第三列按键按下后的键值        
  50   2                      {
  51   3                              case 0x7d: key_value=3;break;
  52   3                              case 0xbd: key_value=7;break;
  53   3                              case 0xdd: key_value=11;break;
C51 COMPILER V9.60.7.0   MATRIXKEY                                                         06/26/2024 23:54:14 PAGE 2   

  54   3                              case 0xed: key_value=15;break;
  55   3                      }
  56   2              }
  57   1              while(KEY_MATRIX_PORT!=0xfd);//等待按键松开       
  58   1              
  59   1              KEY_MATRIX_PORT=0xfe;//给第四列赋值0，其余全为1
  60   1              if(KEY_MATRIX_PORT!=0xfe)//判断第四列按键是否按下
  61   1              {
  62   2                      Delay(10);//消抖，延迟十毫秒
  63   2                      switch(KEY_MATRIX_PORT)//保存第四列按键按下后的键值        
  64   2                      {
  65   3                              case 0x7e: key_value=4;break;
  66   3                              case 0xbe: key_value=8;break;
  67   3                              case 0xde: key_value=12;break;
  68   3                              case 0xee: key_value=16;break;
  69   3                      }
  70   2              }
  71   1              while(KEY_MATRIX_PORT!=0xfe);//等待按键松开
  72   1              
  73   1              return key_value;               
  74   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    238    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
